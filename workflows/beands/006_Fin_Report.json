{
  "name": "Fin Report",
  "nodes": [
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "field": "months",
              "triggerAtDayOfMonth": 5
            }
          ]
        }
      },
      "id": "eda250f9-adfb-4217-90bd-b87ed0c1994e",
      "name": "Schedule Trigger",
      "type": "n8n-nodes-base.scheduleTrigger",
      "position": [
        0,
        0
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "37f77c84-ab0d-4c93-89d3-057c5886acf0",
      "name": "Loop Over Items",
      "type": "n8n-nodes-base.splitInBatches",
      "position": [
        32,
        448
      ],
      "typeVersion": 3
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "ac6bcf14-13e3-464d-b9cd-4adee56018d7",
              "name": "Cost Center",
              "type": "string",
              "value": "={{ $json.Name }}"
            }
          ]
        },
        "options": {}
      },
      "id": "b6958966-6364-4363-80cc-b7d92e8e2ff7",
      "name": "CostCentrs",
      "type": "n8n-nodes-base.set",
      "position": [
        1168,
        0
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "options": {}
      },
      "id": "2fd209ed-d2d4-4a86-8424-be7cd579c091",
      "name": "Date & Time",
      "type": "n8n-nodes-base.dateTime",
      "position": [
        320,
        0
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "// Get the input date from the previous node\nconst inputDateStr = $input.first().json.currentDate;\nconst inputDate = new Date(inputDateStr);\n\n// Move to the first day of the current month\ninputDate.setDate(1);\n\n// Step back one day to land in the previous month\ninputDate.setDate(0);\n\n// Extract previous month and year\nconst previousMonth = inputDate.getMonth() + 1; // Months are 0-based\nconst year = inputDate.getFullYear(); // This will reflect the correct year, even in January\n\nreturn [\n  {\n    json: {\n      previousMonth: previousMonth.toString().padStart(2, '0'), // e.g., \"01\", \"12\"\n      year: year.toString()                                     // e.g., \"2024\"\n    }\n  }\n];\n"
      },
      "id": "472d3ee0-240b-4504-92ac-d72e8fce6d99",
      "name": "PreviousMonth",
      "type": "n8n-nodes-base.code",
      "position": [
        592,
        0
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "c4a6c71a-0df4-49df-9068-f039ddf7d507",
              "name": "CostCenter",
              "type": "string",
              "value": "={{ $json['Cost Center'] }}"
            },
            {
              "id": "ade95f85-baa2-4f5d-a125-7360b17cf99b",
              "name": "previousMonth",
              "type": "string",
              "value": "={{ $('PreviousMonth').item.json.previousMonth }}"
            },
            {
              "id": "36c1d772-5bb7-47a6-81f9-1b70208e558b",
              "name": "year",
              "type": "string",
              "value": "={{ $('PreviousMonth').item.json.year }}"
            }
          ]
        },
        "options": {}
      },
      "id": "0cc40d35-0fd3-4b60-a4bd-0caa8337a020",
      "name": "Selected Cost Center",
      "type": "n8n-nodes-base.set",
      "position": [
        320,
        464
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "version": 2,
            "leftValue": "",
            "caseSensitive": true,
            "typeValidation": "strict"
          },
          "conditions": [
            {
              "id": "d7a13ce7-24d3-406a-934b-97f9a47b206c",
              "operator": {
                "name": "filter.operator.equals",
                "type": "string",
                "operation": "equals"
              },
              "leftValue": "={{ $json['Cost Center'] }}",
              "rightValue": "AI DEPARTMENT"
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "id": "67a1b304-f7b5-4b46-a7b7-504c2528cd33",
      "name": "Filter",
      "type": "n8n-nodes-base.filter",
      "position": [
        1440,
        0
      ],
      "typeVersion": 2.2
    },
    {
      "parameters": {
        "html": "{{ $json.html }}"
      },
      "id": "b4287fab-33a2-4d99-a16a-79731859d813",
      "name": "HTML",
      "type": "n8n-nodes-base.html",
      "position": [
        112,
        1168
      ],
      "typeVersion": 1.2
    },
    {
      "parameters": {
        "jsCode": "const rows = items;\n\n// Get column names from the first row\nconst headers = Object.keys(rows[0].json);\n\n// Build header HTML\nlet headerHtml = headers.map(col => `<th>${col}</th>`).join('');\n\n// Build rows\nlet bodyHtml = rows.map(row => {\n  return `<tr>${headers.map(col => `<td>${row.json[col]}</td>`).join('')}</tr>`;\n}).join('');\n\n// Combine into one table\nconst tableHtml = `\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"0\" style=\"border-collapse: collapse;\">\n  <thead><tr>${headerHtml}</tr></thead>\n  <tbody>${bodyHtml}</tbody>\n</table>\n`;\n\nreturn [{ json: { table: tableHtml } }];\n"
      },
      "id": "7067d4f9-ba0b-45a1-b531-ff11f9ef773b",
      "name": "verticalPL",
      "type": "n8n-nodes-base.code",
      "position": [
        960,
        464
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "id": "7256472c-0d9b-40b8-aa40-2e8087b5b3c1",
      "name": "Merge",
      "type": "n8n-nodes-base.merge",
      "position": [
        1440,
        464
      ],
      "typeVersion": 3.1
    },
    {
      "parameters": {
        "jsCode": "const table1 = $input.first().json.table; // From the first input node\nconst table2 = $items(\"verticalPL\")[0].json.table; // From the node named 'verticalPL'\nconst table3 = $items(\"WIP1\")[0].json.table; // From the node named 'WIP1'\nconst table4 = $items(\"Employees1\")[0].json.table; // From the node named 'Employees1'\n\nconst htmlOutput = `\n<!DOCTYPE html>\n<html>\n<head>\n  <style>\n    body { font-family: Arial, sans-serif; font-size: 14px; color: #333; }\n    h2 { margin-top: 30px; }\n    table { border-collapse: collapse; width: 100%; margin-top: 10px; }\n    th, td { border: 1px solid #ccc; padding: 8px; text-align: right; }\n    th:first-child, td:first-child { text-align: left; }\n    thead { background-color: #f0f0f0; }\n  </style>\n</head>\n<body>\n  <h2>📊 Financial Overview – YTD & PM Summary</h2>\n  ${table1}\n\n  <h2>📊 Financial Overview – Vertical Profit & Loss</h2>\n  ${table2}\n\n  <h2>📊 Financial Overview – WIP Summary</h2>\n  ${table3}\n\n  <h2>👥 Employees in the Business Unit</h2>\n  ${table4}\n</body>\n</html>\n`;\n\nreturn [{ json: { html: htmlOutput } }];\n"
      },
      "id": "38684350-7ace-41fe-93a9-177f5a6b4460",
      "name": "Code",
      "type": "n8n-nodes-base.code",
      "position": [
        1488,
        832
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const rows = items;\n\n// Get column names from the first row\nconst headers = Object.keys(rows[0].json);\n\n// Build header HTML\nlet headerHtml = headers.map(col => `<th>${col}</th>`).join('');\n\n// Build rows\nlet bodyHtml = rows.map(row => {\n  return `<tr>${headers.map(col => `<td>${row.json[col]}</td>`).join('')}</tr>`;\n}).join('');\n\n// Combine into one table\nconst tableHtml = `\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"0\" style=\"border-collapse: collapse;\">\n  <thead><tr>${headerHtml}</tr></thead>\n  <tbody>${bodyHtml}</tbody>\n</table>\n`;\n\nreturn [{ json: { table: tableHtml } }];\n"
      },
      "id": "399999fa-f66b-4165-ac23-0c35d1de773e",
      "name": "CostCenter",
      "type": "n8n-nodes-base.code",
      "position": [
        992,
        240
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const rows = items;\n\n// Get column names from the first row\nconst headers = Object.keys(rows[0].json);\n\n// Build header HTML\nlet headerHtml = headers.map(col => `<th>${col}</th>`).join('');\n\n// Build rows\nlet bodyHtml = rows.map(row => {\n  return `<tr>${headers.map(col => `<td>${row.json[col]}</td>`).join('')}</tr>`;\n}).join('');\n\n// Combine into one table\nconst tableHtml = `\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"0\" style=\"border-collapse: collapse;\">\n  <thead><tr>${headerHtml}</tr></thead>\n  <tbody>${bodyHtml}</tbody>\n</table>\n`;\n\nreturn [{ json: { table: tableHtml } }];\n"
      },
      "id": "63e34ea2-88e9-4e65-837c-be0d9dd01d61",
      "name": "WIP1",
      "type": "n8n-nodes-base.code",
      "position": [
        960,
        640
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "jsCode": "const rows = items;\n\n// Get column names from the first row\nconst headers = Object.keys(rows[0].json);\n\n// Build header HTML\nlet headerHtml = headers.map(col => `<th>${col}</th>`).join('');\n\n// Build rows\nlet bodyHtml = rows.map(row => {\n  return `<tr>${headers.map(col => `<td>${row.json[col]}</td>`).join('')}</tr>`;\n}).join('');\n\n// Combine into one table\nconst tableHtml = `\n<table border=\"1\" cellpadding=\"6\" cellspacing=\"0\" style=\"border-collapse: collapse;\">\n  <thead><tr>${headerHtml}</tr></thead>\n  <tbody>${bodyHtml}</tbody>\n</table>\n`;\n\nreturn [{ json: { table: tableHtml } }];\n"
      },
      "id": "138ccc41-eb71-4e1a-a608-530faf715276",
      "name": "Employees1",
      "type": "n8n-nodes-base.code",
      "position": [
        960,
        848
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "unit": "minutes"
      },
      "id": "60292617-5601-43ba-8872-18124b022d45",
      "name": "Wait",
      "type": "n8n-nodes-base.wait",
      "position": [
        1552,
        1424
      ],
      "webhookId": "83d7ae9a-e309-4bac-a0b4-5ff651e3afe3",
      "typeVersion": 1.1
    },
    {
      "parameters": {
        "jsCode": "let html = $input.first().json.output || '';\n\n// Remove ```html at the start and ``` at the end (if present)\nhtml = html.trim().replace(/^```html\\s*/i, '').replace(/```$/i, '');\n\nreturn [{\n  json: {\n    cleaned_html: html\n  }\n}];\n"
      },
      "id": "dcab0b9f-4c64-4b99-9008-19f0b8aea555",
      "name": "Financial Performance",
      "type": "n8n-nodes-base.code",
      "position": [
        768,
        1168
      ],
      "typeVersion": 2
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b227e25f-99ce-4147-b22d-c2a6cabfcafa",
              "name": "CostCenter",
              "type": "string",
              "value": "={{ $('Selected Cost Center').first().json.CostCenter }}\n"
            },
            {
              "id": "94e5a360-cbff-4498-bd75-98cafe08557b",
              "name": "Email Output",
              "type": "string",
              "value": "={{ $json.cleaned_html }}"
            },
            {
              "id": "20cd6408-ab44-4632-8f0a-967604f16a1c",
              "name": "For the Month",
              "type": "string",
              "value": "=Month : {{ $('PreviousMonth').first().json.previousMonth }} - {{ $('PreviousMonth').first().json.year }}"
            }
          ]
        },
        "options": {}
      },
      "id": "6e5d63b7-68f1-46f1-ae16-79264c680cc5",
      "name": "Email Data",
      "type": "n8n-nodes-base.set",
      "position": [
        1008,
        1168
      ],
      "typeVersion": 3.4
    },
    {
      "parameters": {},
      "id": "eab0d3a5-9b06-4ad0-8fcc-6b3c0a669542",
      "name": "Calculator",
      "type": "@n8n/n8n-nodes-langchain.toolCalculator",
      "position": [
        688,
        1472
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "=You are a Business Performance Analyst Expert in Financial Management of BeandsMedia,  you willbe given an input to Analyze the Financial Performance of syncbricks which is an AI and Automation Company.\nThe sections Given to you will be below\nUse only Russian language.\n1. Financial Overview – YTD & PM Summary (whis is income and expense of the Company, this data doesn't include the calculation of Gross Profit and Net Profit that you must do. This should be used together in one section only don't seperate them)\n2. Financial Overview – Vertical Profit & Loss (This containers the Verticials within the Cost Center, these are in fact the Sub Business Unit, you don't need to calculate anything but the information is for analysis to see how the Verticals within the Business Unit Perfored )\n3. Financial Overview – WIP Summary (This is the Projects Summary about how many projects are currently open and work is the WIP - Work in Process of the Project, the WIP figure should be added for Profit and Loss Statement Under Proejct Reveneu as expected WIP)\n4. Employees in the Business Unit (These will be the number of Employees who are directly working in this BU, which means these employees are only serving the Company, other staff which are in back office support are not included in this. )\n*** Your Role ***\n\nYour Role is to Prepare a comprehensive Report : \n1. Executive Summary : Tell how was the overall performance of the Business Unit.\n2. Analayze the Financial Overview - YTD together with PM Summary (Which is Previous Month) which is previous month Income and Expenses you must use Proper Strcuture of Financial Statement with Budget Vs Actuals (follow same input already given). \n\nYou must use the Section that will be shared with you in detail that says \"Financial Overview – YTD & PM Summary \" and from there you must ensure to create sections based on best Practices of Performance Analysis that should include;\n\nSection: Revenue\n-Projects - Revenue\n-Trading - Revenue\n-Service - Revenue\nNet Sales (Total)\nSection: Project Work in Process\nWIP (Revenue to Book)\nTotal: Gross Sale\nSection: Cost of Sale\nProjects - COGS\nTrading - COGS\nService - COGS\nTotal Cost of Sales\nGross Profit\nOther Income\nGross Income\n\nSection: Indirect Cost (here you must all the detail of expenses from \"Financial Overview – YTD & PM Summary\"\nThen you must calculate\nProfit / (Loss) before tax\nNP % to Revenue\n\nUse the calculator tool to ensure precise calculations.\n\n\n- Don't add decimals give format in currency but don't add symbol.\nUse the standard P&L Format where you should first use Sale, then Cost of Sale and GP, then use Indirect Expenses and then Net Profile. Ensure to calculate the Perentages as well.\n3. Provide the Summary of the Verticials Performance with their Profit and Loss and Percetage and Total of all Verticlals\n4. Current Project Progress.\n5. Employees Summary, Number of Employees, How many joined in this Year and what is per Eployee Revenue and Gross Profit \n\nAnalyze Overall Performance of the Company and provide the Business Managers an Overview of what should be done next. Calculate per employee profit as well and suggest what is the performance overall\n\n**Tools**\nUse calculator tool to do all calculations for accurate calculations\n\n** Formatting and Output **\n\nGive output in html format fully responsive in with beauty added using CSS,  ready to be shared with all possible tables, in hightly attracrtive format, headings, add colors green for good, red for bad, organge for acceptable and so on, also add remarks to show how the performance was, enusre to response as if you were as an Expert in Analyzing the Bususiness Performance. Don't add any other infomration or symbols which are not part of html. Don't give additional message saying ok, I will do and so on.\nAlign Text in table on left and numbers on right\nNumber formatting : ##,###\n\n\nHere is the data\n\nMonth : {{ $('PreviousMonth').first().json.previousMonth }}\nYear  : {{ $('PreviousMonth').first().json.year }}\n\n{{ $json.html }}\n\n",
        "options": {}
      },
      "id": "396d955a-cb34-499d-a190-0d4584422418",
      "name": "Business Performance AI Agent (Analyst)",
      "type": "@n8n/n8n-nodes-langchain.agent",
      "position": [
        368,
        1168
      ],
      "typeVersion": 1.8,
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {},
      "id": "9bfe75b1-fa26-4f92-98b0-97e2435d4d8f",
      "name": "Think",
      "type": "@n8n/n8n-nodes-langchain.toolThink",
      "position": [
        528,
        1472
      ],
      "typeVersion": 1
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw",
          "mode": "list",
          "cachedResultName": "Ai agent",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Расходы",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        864,
        0
      ],
      "id": "7aef7c63-9be3-477d-986c-5e4961e6770d",
      "name": "Google Sheets",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "EjPWBysNE3160w4D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw",
          "mode": "list",
          "cachedResultName": "Ai agent",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 1331480122,
          "mode": "list",
          "cachedResultName": "Доходы",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw/edit#gid=1331480122"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        704,
        240
      ],
      "id": "c9f8726c-89f7-480e-ba9b-d736eeaa7e8b",
      "name": "Google Sheets1",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "EjPWBysNE3160w4D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "model": "deepseek/deepseek-chat-v3-0324",
        "options": {
          "temperature": 0.1
        }
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenRouter",
      "typeVersion": 1,
      "position": [
        304,
        1392
      ],
      "id": "08649586-0229-41ff-a6dd-53d06176f15a",
      "name": "OpenRouter Chat Model",
      "credentials": {
        "openRouterApi": {
          "id": "YhWdFblBS0EqOY8F",
          "name": "OpenRouter account 2"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw",
          "mode": "list",
          "cachedResultName": "Ai agent",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Расходы",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw/edit#gid=0"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        704,
        464
      ],
      "id": "a257b668-d046-469c-9dec-841a5c61ce8b",
      "name": "Google Sheets2",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "EjPWBysNE3160w4D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "sendTo": "insta-web@ya.ru",
        "subject": "Фин отчет",
        "message": "={{ $json['Email Output'] }}",
        "options": {}
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        1264,
        1184
      ],
      "id": "76b46210-db34-4a07-b827-60afc8a268b8",
      "name": "Gmail",
      "webhookId": "8d88138a-0fe3-4ecb-9479-bb62f3a28013",
      "credentials": {
        "gmailOAuth2": {
          "id": "Q17KQto7FX6IZmQL",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw",
          "mode": "list",
          "cachedResultName": "Ai agent",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 109022140,
          "mode": "list",
          "cachedResultName": "Доход проекты",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw/edit#gid=109022140"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        704,
        640
      ],
      "id": "d80de57c-03be-4426-bd36-e014ff0262ef",
      "name": "Google Sheets3",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "EjPWBysNE3160w4D",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "documentId": {
          "__rl": true,
          "value": "1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw",
          "mode": "list",
          "cachedResultName": "Ai agent",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": 881078031,
          "mode": "list",
          "cachedResultName": "Сотрудники",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1URxJgXKyymBXZ_B22xLmnDDxZmqt9h5FlBacsEi0Grw/edit#gid=881078031"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleSheets",
      "typeVersion": 4.5,
      "position": [
        704,
        848
      ],
      "id": "8f01c9cd-8a58-4f51-a0d0-2c370d8d68a9",
      "name": "Google Sheets4",
      "credentials": {
        "googleSheetsOAuth2Api": {
          "id": "EjPWBysNE3160w4D",
          "name": "Google Sheets account"
        }
      }
    }
  ],
  "pinData": {},
  "connections": {
    "Code": {
      "main": [
        [
          {
            "node": "HTML",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML": {
      "main": [
        [
          {
            "node": "Business Performance AI Agent (Analyst)",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "WIP1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Wait": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Code",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Think": {
      "ai_tool": [
        [
          {
            "node": "Business Performance AI Agent (Analyst)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "Filter": {
      "main": [
        [
          {
            "node": "Loop Over Items",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Calculator": {
      "ai_tool": [
        [
          {
            "node": "Business Performance AI Agent (Analyst)",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "CostCenter": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "CostCentrs": {
      "main": [
        [
          {
            "node": "Filter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Email Data": {
      "main": [
        [
          {
            "node": "Gmail",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Employees1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "verticalPL": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Date & Time": {
      "main": [
        [
          {
            "node": "PreviousMonth",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "PreviousMonth": {
      "main": [
        [
          {
            "node": "Google Sheets",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Loop Over Items": {
      "main": [
        [],
        [
          {
            "node": "Selected Cost Center",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "Date & Time",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Selected Cost Center": {
      "main": [
        [
          {
            "node": "Google Sheets1",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets2",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets3",
            "type": "main",
            "index": 0
          },
          {
            "node": "Google Sheets4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Financial Performance": {
      "main": [
        [
          {
            "node": "Email Data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Business Performance AI Agent (Analyst)": {
      "main": [
        [
          {
            "node": "Financial Performance",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets": {
      "main": [
        [
          {
            "node": "CostCentrs",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets1": {
      "main": [
        [
          {
            "node": "CostCenter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenRouter Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "Business Performance AI Agent (Analyst)",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets2": {
      "main": [
        [
          {
            "node": "verticalPL",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Gmail": {
      "main": [
        [
          {
            "node": "Wait",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets3": {
      "main": [
        [
          {
            "node": "WIP1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Sheets4": {
      "main": [
        [
          {
            "node": "Employees1",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "a5dbf6af-21dd-4327-ab6e-654ceb15c3f7",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "9231723f537d35de72b1fbd4c07c55060f6cd2f00b2fb8e91472f57ce50a95af"
  },
  "id": "24Pc7cDj0s8JgfO3",
  "tags": []
}